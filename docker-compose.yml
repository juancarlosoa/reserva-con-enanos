services:
  gateway:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PROJECT: RCE_Gateway
    ports:
      - "5101:8080"
    volumes:
      - ./certs:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_Kestrel__Endpoints__Https__Url=https://*:8080
      - ASPNETCORE_Kestrel__Endpoints__Https__Certificate__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Endpoints__Https__Certificate__Password=RCE
    networks:
      - rce_network

  auth:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PROJECT: RCE_Auth
    # ports: # ✅ Removido - solo accesible internamente
    volumes:
      - ./certs:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_Kestrel__Endpoints__Https__Url=https://*:8080
      - ASPNETCORE_Kestrel__Endpoints__Https__Certificate__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Endpoints__Https__Certificate__Password=RCE
    networks:
      - rce_network
    depends_on:
      - postgres

  heroui:
    build:
      context: ./RCE_HeroUI
      dockerfile: Dockerfile.dev
    volumes:
      - ./RCE_HeroUI:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    networks:
      - rce_network

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./dbInit:/docker-entrypoint-initdb.d
    networks:
      - rce_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: rce_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - rce_network
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres

  providers:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PROJECT: RCE_Providers
    # ports: # ✅ Removido - solo accesible internamente
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - rce_network

  reservations:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PROJECT: ReservaConEnanos.Reservations
    # ports: # ✅ No expuesto - solo accesible internamente
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - rce_network
    depends_on:
      - postgres

  vuefrontend:
    container_name: vuefrontend
    build:
      context: ./RCE_Vue
      dockerfile: Dockerfile.dev
    ports:
      - "5174:5174"
    volumes:
      - ./RCE_Vue:/app
      - /app/node_modules
    environment:
      - HOST=0.0.0.0
    networks:
      - rce_network
networks:
  rce_network:


volumes:
  postgres-data:
